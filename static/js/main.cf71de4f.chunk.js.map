{"version":3,"sources":["App.js","index.js"],"names":["App","props","handleNewQuote","randomInt","Math","floor","random","state","quoteList","length","setState","activeQuote","quote","author","id","this","onClick","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPA0EeA,G,kBAtEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAgDRC,eAAiB,WACf,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAW,EAAKC,MAAMC,UAAUC,QAEhE,EAAKC,SAAS,CACZC,YAAcR,KAnDhB,EAAKI,MAAQ,CACXI,YAAa,EACbH,UAAW,CACT,CACEI,MAAO,gEACPC,OAAQ,gBAEV,CACED,MAAO,gGACPC,OAAQ,mBAEV,CACED,MAAO,+EACPC,OAAQ,kBAEV,CACED,MAAO,sLACPC,OAAQ,eAEV,CACED,MAAM,iIACNC,OAAQ,mBAEV,CACED,MAAM,uEACNC,OAAQ,gBAEV,CACED,MAAO,mJACPC,OAAQ,iBAEV,CACED,MAAO,0FACPC,OAAQ,YAEV,CACED,MAAO,yEACPC,OAAQ,kBAEV,CACED,MAAM,qHACNC,OAAO,kBA3CI,E,sEA2DjB,OACE,yBAAKC,GAAG,aACN,yBAAKA,GAAG,QAAQC,KAAKR,MAAMC,UAAUO,KAAKR,MAAMI,aAAaC,OAC7D,yBAAKE,GAAG,UAAUC,KAAKR,MAAMC,UAAUO,KAAKR,MAAMI,aAAaE,QAC/D,4BAAQG,QAASD,KAAKb,eAAgBY,GAAG,aAAzC,aACA,uBAAGA,GAAG,cAAcG,KAAI,iDAA4CF,KAAKR,MAAMC,UAAUO,KAAKR,MAAMI,aAAaC,MAAzF,kBAAmGG,KAAKR,MAAMC,UAAUO,KAAKR,MAAMI,aAAaE,SAAxK,mB,GAjEUK,IAAMC,YCGxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cf71de4f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeQuote: 0,\n      quoteList: [\n        {\n          quote: \"I'm not sure if I was the first man in space or the last dog.\",\n          author: \"Yuri Gagarin\",\n        },\n        {\n          quote: \"'We’ll never survive!' 'Nonsense. You’re only saying that because no one ever has.'\",\n          author: \"William Goldman\",\n        },\n        {\n          quote: \"You know, Hobbes, some days even my lucky rocket ship underpants don't help.\",\n          author: \"Bill Watterson\",\n        },\n        {\n          quote: \"You people talk about the living and the dead as if they were two mutually exclusive categories. As if you cannot have a river that is also a road, or a song that is also a color.\",\n          author: \"Neil Gaiman\"\n        },\n        {\n          quote:\"Yet man will never be perfect until he learns to create and destroy; he does know how to destroy, and that is half the battle.\",\n          author: \"Alexandre Dumas\",\n        },\n        {\n          quote:\"Never let your sense of morals prevent you from doing what is right.\",\n          author: \"Isaac Asimov\",\n        },\n        {\n          quote: \"Let's think the unthinkable, let's do the undoable. Let us prepare to grapple with the ineffable itself, and see if we may not eff it after all.\",\n          author: \"Douglas Adams\",\n        },\n        {\n          quote: \"A creative man is motivated by the desire to achieve, not by the desire to beat others.\",\n          author: \"Ayn Rand\",\n        },\n        {\n          quote: \"I'm not dumb. I just have a command of thoroughly useless information.\",\n          author: \"Bill Watterson\",\n        },\n        {\n          quote:\"A bone to the dog is not charity. Charity is the bone shared with the dog, when you are just as hungry as the dog.\",\n          author:\"-Jack London\",\n        }\n      ]\n    }\n  }\n\n  handleNewQuote = () => {\n    let randomInt = Math.floor(Math.random() * this.state.quoteList.length);\n\n    this.setState({\n      activeQuote : randomInt\n    });\n  }\n\n  render() {\n\n    return (\n      <div id=\"quote-box\">\n        <div id=\"text\">{this.state.quoteList[this.state.activeQuote].quote}</div>\n        <div id=\"author\">{this.state.quoteList[this.state.activeQuote].author}</div>\n        <button onClick={this.handleNewQuote} id=\"new-quote\">New Quote</button>\n        <a id=\"tweet-quote\" href={`https://twitter.com/intent/tweet/?text=${this.state.quoteList[this.state.activeQuote].quote} –${this.state.quoteList[this.state.activeQuote].author}`}>Tweet this</a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}